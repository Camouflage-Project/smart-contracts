/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenTimelock, TokenTimelockInterface } from "../TokenTimelock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "beneficiaries",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161099038038061099083398101604081905261002f91610058565b60008054336001600160a01b031990911617905560601b6001600160601b031916608052610086565b600060208284031215610069578081fd5b81516001600160a01b038116811461007f578182fd5b9392505050565b60805160601c6108ec6100a460003960006102d201526108ec6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063015677391461005c57806319165587146100865780638da5cb5b1461009b578063e2ab691d146100b0578063fc0c546a146100c3575b600080fd5b61006f61006a366004610511565b6100cb565b60405161007d929190610878565b60405180910390f35b610099610094366004610511565b6100e4565b005b6100a3610180565b60405161007d91906105b1565b6100996100be36600461052b565b61018f565b6100a36102d0565b6001602081905260009182526040909120805491015482565b6001600160a01b038116600090815260016020819052604090912001544210156101295760405162461bcd60e51b815260040161012090610611565b60405180910390fd5b6001600160a01b03811660009081526001602052604090205461015f828261014f6102d0565b6001600160a01b031691906102f4565b506001600160a01b0316600090815260016020819052604082208281550155565b6000546001600160a01b031681565b6000546001600160a01b031633146101b95760405162461bcd60e51b81526004016101209061073d565b4282116101d85760405162461bcd60e51b8152600401610120906107e4565b6101e06102d0565b6001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161020b91906105b1565b60206040518083038186803b15801561022357600080fd5b505afa158015610237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025b919061057d565b81111561027a5760405162461bcd60e51b8152600401610120906106a9565b6000811161029a5760405162461bcd60e51b815260040161012090610836565b60408051808201825291825260208083019384526001600160a01b03909416600090815260019485905220905181559051910155565b7f000000000000000000000000000000000000000000000000000000000000000090565b61034a8363a9059cbb60e01b84846040516024016103139291906105c5565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261034f565b505050565b60006103a4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103de9092919063ffffffff16565b80519091501561034a57808060200190518101906103c2919061055d565b61034a5760405162461bcd60e51b81526004016101209061079a565b60606103ed84846000856103f7565b90505b9392505050565b6060824710156104195760405162461bcd60e51b815260040161012090610663565b610422856104b7565b61043e5760405162461bcd60e51b815260040161012090610706565b600080866001600160a01b0316858760405161045a9190610595565b60006040518083038185875af1925050503d8060008114610497576040519150601f19603f3d011682016040523d82523d6000602084013e61049c565b606091505b50915091506104ac8282866104c1565b979650505050505050565b803b15155b919050565b606083156104d05750816103f0565b8251156104e05782518084602001fd5b8160405162461bcd60e51b815260040161012091906105de565b80356001600160a01b03811681146104bc57600080fd5b600060208284031215610522578081fd5b6103f0826104fa565b60008060006060848603121561053f578182fd5b610548846104fa565b95602085013595506040909401359392505050565b60006020828403121561056e578081fd5b815180151581146103f0578182fd5b60006020828403121561058e578081fd5b5051919050565b600082516105a7818460208701610886565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526105fd816040850160208701610886565b601f01601f19169190910160400192915050565b60208082526032908201527f546f6b656e54696d656c6f636b3a2063757272656e742074696d65206973206260408201527165666f72652072656c656173652074696d6560701b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252603a908201527f546f6b656e54696d656c6f636b3a20616d6f756e74206973206772656174657260408201527f207468616e2074686520636f6e74726163742062616c616e6365000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252603c908201527f546f6b656e54696d656c6f636b3a20746869732066756e6374696f6e2063616e60408201527f206f6e6c792062652063616c6c656420627920746865206f776e657200000000606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b60208082526032908201527f546f6b656e54696d656c6f636b3a2072656c656173652074696d65206973206260408201527165666f72652063757272656e742074696d6560701b606082015260800190565b60208082526022908201527f546f6b656e54696d656c6f636b3a20616d6f756e742069732030206f72206c65604082015261737360f01b606082015260800190565b918252602082015260400190565b60005b838110156108a1578181015183820152602001610889565b838111156108b0576000848401525b5050505056fea264697066735822122091a4734d1f784727b83c824c3bb8ee52f3de90c8ec7cfd5e8541276844a679a364736f6c63430008000033";

type TokenTimelockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenTimelockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenTimelock__factory extends ContractFactory {
  constructor(...args: TokenTimelockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenTimelock> {
    return super.deploy(token_, overrides || {}) as Promise<TokenTimelock>;
  }
  getDeployTransaction(
    token_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token_, overrides || {});
  }
  attach(address: string): TokenTimelock {
    return super.attach(address) as TokenTimelock;
  }
  connect(signer: Signer): TokenTimelock__factory {
    return super.connect(signer) as TokenTimelock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenTimelockInterface {
    return new utils.Interface(_abi) as TokenTimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenTimelock {
    return new Contract(address, _abi, signerOrProvider) as TokenTimelock;
  }
}
