/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NodeOperatorFactory,
  NodeOperatorFactoryInterface,
} from "../NodeOperatorFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "camoTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingContractFactoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nodeOperator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "stablecoin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "NodeOperatorCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "stablecoin",
        type: "address",
      },
    ],
    name: "create",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "instances",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "namespace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516111bc3803806111bc83398101604081905261002f91610069565b6001600160601b0319606092831b811660a052911b1660805261009b565b80516001600160a01b038116811461006457600080fd5b919050565b6000806040838503121561007b578182fd5b6100848361004d565b91506100926020840161004d565b90509250929050565b60805160601c60a05160601c6110f76100c5600039600061018001526000609a01526110f76000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806384b47b0f146100465780638b6887b81461006f578063a2f7b3a514610082575b600080fd5b610059610054366004610438565b610095565b60405161006691906104d4565b60405180910390f35b61005961007d3660046103fd565b6102fc565b610059610090366004610488565b610322565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635300f9b4336040518263ffffffff1660e01b81526004016100e491906104d4565b60206040518083038186803b1580156100fc57600080fd5b505afa158015610110573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013491906103da565b90506001600160a01b0381166101655760405162461bcd60e51b815260040161015c90610556565b60405180910390fd5b6040516370a0823160e01b81526101f4906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906101b59085906004016104d4565b60206040518083038186803b1580156101cd57600080fd5b505afa1580156101e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020591906104a0565b116102225760405162461bcd60e51b815260040161015c9061060c565b60006001600160a01b031660018560405161023d91906104b8565b908152604051908190036020019020546001600160a01b0316146102735760405162461bcd60e51b815260040161015c906105a4565b60003385856040516102849061034c565b6102909392919061050c565b604051809103906000f0801580156102ac573d6000803e3d6000fd5b509050336001600160a01b03167ffcdd178123bd839aafe04161de13a569d151d1acf6ccdef7bb43ebf0ceea91e08286426040516102ec939291906104e8565b60405180910390a2949350505050565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6000818154811061033257600080fd5b6000918252602090912001546001600160a01b0316905081565b610a22806106a083390190565b600082601f830112610369578081fd5b813567ffffffffffffffff8082111561038457610384610671565b604051601f8301601f1916810160200182811182821017156103a8576103a8610671565b6040528281528483016020018610156103bf578384fd5b82602086016020830137918201602001929092529392505050565b6000602082840312156103eb578081fd5b81516103f681610687565b9392505050565b60006020828403121561040e578081fd5b813567ffffffffffffffff811115610424578182fd5b61043084828501610359565b949350505050565b6000806040838503121561044a578081fd5b823567ffffffffffffffff811115610460578182fd5b61046c85828601610359565b925050602083013561047d81610687565b809150509250929050565b600060208284031215610499578081fd5b5035919050565b6000602082840312156104b1578081fd5b5051919050565b600082516104ca818460208701610641565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060018060a01b03808616835260606020840152845180606085015261053a816080860160208901610641565b9316604083015250601f91909101601f19160160800192915050565b6020808252602e908201527f5468657265206973206e6f207374616b696e6720636f6e747261637420666f7260408201526d103737b2329037b832b930ba37b960911b606082015260800190565b60208082526042908201527f4e6f6465204f70657261746f7220466163746f72793a204e6f6465206f70657260408201527f61746f7220776974682074686973206e616d6520616c72656164792065786973606082015261747360f01b608082015260a00190565b6020808252818101527f5374616b696e6720616d6f756e74206973206c6f776572207468617420353030604082015260600190565b60005b8381101561065c578181015183820152602001610644565b8381111561066b576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461069c57600080fd5b5056fe60a060405260006005553480156200001657600080fd5b5060405162000a2238038062000a2283398101604081905262000039916200015a565b600080546001600160a01b0319166001600160a01b03851617905581516200006990600290602085019062000097565b5060018054336001600160a01b031990911617905560601b6001600160601b03191660805250620002a59050565b828054620000a59062000252565b90600052602060002090601f016020900481019282620000c9576000855562000114565b82601f10620000e457805160ff191683800117855562000114565b8280016001018555821562000114579182015b8281111562000114578251825591602001919060010190620000f7565b506200012292915062000126565b5090565b5b8082111562000122576000815560010162000127565b80516001600160a01b03811681146200015557600080fd5b919050565b6000806000606084860312156200016f578283fd5b6200017a846200013d565b602085810151919450906001600160401b038082111562000199578485fd5b818701915087601f830112620001ad578485fd5b815181811115620001c257620001c26200028f565b604051601f8201601f1916810185018381118282101715620001e857620001e86200028f565b60405281815283820185018a1015620001ff578687fd5b8692505b8183101562000222578383018501518184018601529184019162000203565b818311156200023357868583830101525b809650505050505062000249604085016200013d565b90509250925092565b6002810460018216806200026757607f821691505b602082108114156200028957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c61075e620002c460003960006104fe015261075e6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a30385d71161005b578063a30385d7146100e8578063c4552791146100fd578063ddd81f8214610110578063e9cbd8221461011857610088565b806359f99c531461008d57806363bd1d4a146100b65780638da5cb5b146100c0578063900c47d7146100d5575b600080fd5b6100a061009b36600461056e565b610120565b6040516100ad91906105ef565b60405180910390f35b6100be6101b1565b005b6100c86103f2565b6040516100ad919061059e565b6100c86100e336600461056e565b610401565b6100f061041c565b6040516100ad9190610698565b6100c861010b366004610520565b610422565b6100be61043d565b6100c86104fc565b600061012a6104fc565b6001600160a01b03166323b872dd3330856040518463ffffffff1660e01b8152600401610159939291906105b2565b602060405180830381600087803b15801561017357600080fd5b505af1158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab919061054e565b92915050565b6000546001600160a01b031633146101e45760405162461bcd60e51b81526004016101db906105fa565b60405180910390fd5b60006101ee6104fc565b6001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610219919061059e565b60206040518083038186803b15801561023157600080fd5b505afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102699190610586565b90506000606461027a8360326106c1565b61028491906106a1565b90506000600554828461029791906106e0565b6102a191906106a1565b905060005b60055481101561035d576102b86104fc565b6000828152600360205260409081902054905163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926102f89291169086906004016105d6565b602060405180830381600087803b15801561031257600080fd5b505af1158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a919061054e565b5080610355816106f7565b9150506102a6565b506103666104fc565b6001600160a01b031663a9059cbb61037c6103f2565b846040518363ffffffff1660e01b815260040161039a9291906105d6565b602060405180830381600087803b1580156103b457600080fd5b505af11580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec919061054e565b50505050565b6000546001600160a01b031690565b6003602052600090815260409020546001600160a01b031681565b60055481565b6004602052600090815260409020546001600160a01b031681565b336000908152600460205260409020546001600160a01b0316156104735760405162461bcd60e51b81526004016101db90610645565b6005805460009081526003602090815260408083208054336001600160a01b031991821681179092558185526004909352908320805490921617905581546104ba906106f7565b9091555060405133907fb57b5f971f9a8d2501b557b69a1ac844d7f4df372033ddc6065931b0e90bd120906104f290309042906105d6565b60405180910390a2565b7f000000000000000000000000000000000000000000000000000000000000000090565b600060208284031215610531578081fd5b81356001600160a01b0381168114610547578182fd5b9392505050565b60006020828403121561055f578081fd5b81518015158114610547578182fd5b60006020828403121561057f578081fd5b5035919050565b600060208284031215610597578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6020808252602b908201527f596f7520617265206e6f7420746865206f776e6572206f662074686973204e6f60408201526a32329027b832b930ba37b960a91b606082015260800190565b60208082526033908201527f50726f787920697320616c726561647920726567697374657265642077697468604082015272103a3434b9903737b2329037b832b930ba37b960691b606082015260800190565b90815260200190565b6000826106bc57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156106db576106db610712565b500290565b6000828210156106f2576106f2610712565b500390565b600060001982141561070b5761070b610712565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202a6d55305cab7027f69436f9ed5dad15f4b5f62360c780fda4f2c9a5f2cc1a2464736f6c63430008000033a2646970667358221220bb0340d26b799d0548d5b0adae1d4e69941940e412b0192e421665d43784b68a64736f6c63430008000033";

type NodeOperatorFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NodeOperatorFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NodeOperatorFactory__factory extends ContractFactory {
  constructor(...args: NodeOperatorFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    camoTokenAddress: string,
    stakingContractFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NodeOperatorFactory> {
    return super.deploy(
      camoTokenAddress,
      stakingContractFactoryAddress,
      overrides || {}
    ) as Promise<NodeOperatorFactory>;
  }
  getDeployTransaction(
    camoTokenAddress: string,
    stakingContractFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      camoTokenAddress,
      stakingContractFactoryAddress,
      overrides || {}
    );
  }
  attach(address: string): NodeOperatorFactory {
    return super.attach(address) as NodeOperatorFactory;
  }
  connect(signer: Signer): NodeOperatorFactory__factory {
    return super.connect(signer) as NodeOperatorFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NodeOperatorFactoryInterface {
    return new utils.Interface(_abi) as NodeOperatorFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NodeOperatorFactory {
    return new Contract(address, _abi, signerOrProvider) as NodeOperatorFactory;
  }
}
